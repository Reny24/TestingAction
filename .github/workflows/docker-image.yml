name: Docker Image CI

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main
      - main1
jobs:
  build-and-push1:
#    if: github.event.pull_request.merged == true
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v3

   #   - uses: actions/setup-node@v4
   #     with:
   #       node-version: 20
  #    - name: Generate Token
  #      id: generate_token
  #      uses: tibdex/github-app-token@v2
  #      with:
  #        app_id: ${{ secrets.APP_ID }}
  #        private_key: ${{ secrets.REGISTRY_PRIVATE_KEY }}


      - name: Settiamo tutto a mano
        run: |
         echo ' {  "insecure-registries":  "10.14.119.201:8081"  } ' || sudo tee /etc/docker/daemon.json && cat daemon.json && sudo systemctl restart docker


      - name: Login to JFrog
        uses: docker/login-action@v3
        with:
          registry: 10.14.119.201:8081
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASSWORD }}


      #  - name: Login to GitHub Packages Docker registry
      #   run: echo "${{ steps.generate_token.outputs.token }}" | docker login ghcr.io -u ghs --password-stdin
  #    - name: Log in to Docker JFrog
  #      uses: docker/login-action@v3
  #      with:
  #        registry: ${{ env.REGISTRY }}
  #        username: ${{ github.actor }}
  #        password: ${{ env.GITHUB_TOKEN }}
  #      env:
  #        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      #     - name: Inside the testino
      #       run: cd testino


  #    - name: Extract metadata (tags, labels) for Docker
  #      id: meta
  #      uses: docker/metadata-action@v5
  #      with:
  #        images: localhost:8085/repository/prova/testino


      #   - name: Build the Docker image
      #     run: docker build . --file testino/Dockerfile --tag maven:3.8.4-openjdk-17-slim

      #   - name: Push the Docker image to GitHub Packages
      #     run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest
      #   - name: List contents of testino directory
      #     run: ls -l ./testino

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./testino
          push: true
          tags: 10.14.119.201:8081/artifactory/docker/testino
      #    labels: ${{ steps.meta.outputs.labels }}

      #    secrets: |
      #     "github_token=${{ env.GITHUB_TOKEN }}"
     #   env:
     #     GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
    #  - name: Push to registry
    #    run: docker push ${{ steps.meta.outputs.tags }}
    #    env:
    #      GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
